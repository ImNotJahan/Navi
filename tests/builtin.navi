(assert_that (= 1 1))
(assert_that (= #a #a))
(assert_that (= false false))
(assert_that (= 1.05 1.05))
(assert_that (= 1 1.0))
(assert_that (= null null))
(assert_that (= (head '(1 2 3)) 1))
(assert_that (= (hail '(1 2 3)) 2))
(assert_that (= '(#a 0) (pair #a (pair 0 null))))
(assert_that (= (+ 1 2) 3))
(assert_that (= (+ 1.5 2) 3.5))
(assert_that (= (+ 1.5 1.5) 3))
(assert_that (= (+ 3 -2) 1))
(assert_that (= (+ 3 -2) 1))
(assert_that (= (+ 12345678987 234) 12345679221))
(assert_that (= (+ 12345678987 -234) 12345678753))
(assert_that (< 1 2))
(assert_that (< 10 10.1))
(assert_that (not (< 10 2)))
(assert_that (not (< 10 -2)))
(assert_that (and true true))
(assert_that (not (and true false)))
(assert_that (not (and false true)))
(assert_that (not (and false false)))
(assert_that (or true false))
(assert_that (or false true))
(assert_that (or true true))
(assert_that (not (or false false)))
(assert_that (= (int 10.8) 10))
(assert_that (= (int 10) 10))
(assert_that (= (type_of 10) 'integer))
(assert_that (= (type_of null) null))
(assert_that (= (float 10) 10.0))
(assert_that (= (float 10.5) 10.5))
(assert_that (= (head (ratio 3 5)) 3))
(assert_that (= (tail (ratio 3 5)) 5))
(assert_that (= (apply + '(1 2)) 3))
(assert_that (= (type_of (string '(#h #e #l #l #o))) 'string))
(assert_that (= (type_of (bignum 10)) 'bignum))
(assert_that (= (if true 1 0) 1))
(assert_that (= (if false 1 0) 0))
(assert_that (= (if true then 1 otherwise 0) 1))

(set a to 0)
(assert_that (= a 0))

(set b 10)
(assert_that (= b 10))

(set b 3)
(assert_that (= b 3))

(change b 9)
(assert_that (= b 9))

(change b a)

(assert_that (= b 0))

(assert_that (= (reflect "10") 10))

(sayline "passed!")