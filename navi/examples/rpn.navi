(load "navi/strings.navi" "ctoi")
(load "navi/math.navi" "exp")

(set (rpn expr)
	(let ((stack null) (temp 0) (di 0) (reading_digit false))
		(while (non_null? expr)
			(let ((char (head expr)))
				(if (= char #+)
					(do
						(change temp (+ (hail stack) (head stack)))
						(change stack (tail (tail stack)))
						(change stack (pair temp stack))
						(change temp 0))
				(if (= char #-)
					(do
						(change temp (- (hail stack) (head stack)))
						(change stack (tail (tail stack)))
						(change stack (pair temp stack))
						(change temp 0))
				(if (= char #*)
					(do
						(change temp (* (hail stack) (head stack)))
						(change stack (tail (tail stack)))
						(change stack (pair temp stack))
						(change temp 0))
				(if (= char #/)
					(do
						(change temp (// (hail stack) (head stack)))
						(change stack (tail (tail stack)))
						(change stack (pair temp stack))
						(change temp 0))
				(if (= char #\s)
					(when reading_digit
						(change stack (pair temp stack))
						(change temp 0)
						(change di 0)
						(change reading_digit false))
					(do 
						(*= temp (exp 10 di))
						(+= temp (ctoi char))
						(++ di)
						(change reading_digit true))))))))
			(change expr (tail expr)))
		(head stack)))