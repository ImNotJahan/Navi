~ Adds math functions for ratios

(load "navi/math.navi" "exp gcd abs remainder remove_decimal")

(set (+ratio a b)
	(let ((nume (+ (* (tail a) (head b)) (* (tail b) (head a)))) (deno (* (tail a) (tail b))))
		(simplify_ratio (ratio nume deno))))
		
(set (-ratio a b) 
	(let ((nume (- (* (tail b) (head a)) (* (tail a) (head b)))) (deno (* (tail a) (tail b))))
		(simplify_ratio (ratio nume deno))))
		
(set (*ratio a b) 
	(let ((nume (* (head a) (head b))) (deno (* (tail a) (tail b))))
		(simplify_ratio (ratio nume deno))))
		
(set (/ratio a b) 
	(let ((nume (* (head a) (tail b))) (deno (* (tail a) (head b))))
		(simplify_ratio (ratio nume deno))))
		
(set (simplify_ratio r) 
	(let ((nume (head r)) (deno (tail r)))
		(ratio (/ nume (gcd nume deno)) (/ deno (gcd nume deno)))))
	
(set (ftor f)
	(let ((r (remove_decimal f)))
		(simplify_ratio (ratio (head r) (exp 10 (head (tail r)))))))
		
(set (itor i)
	(ratio i 1))
	
(set (numerator x) (head x))
(set (denominator x) (tail x))

~ builtin = can compare ratios, but it won't simplify them beforehand
(set (=ratio a b)
	(let ((a (simplify_ratio a)) (b (simplify_ratio b)))
		(and (= (tail a) (tail b)) (= (head a) (head b)))))